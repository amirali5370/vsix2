steps:
    # - bash: |
    #       printenv
    #   displayName: "Show all env vars"
    #   condition: eq(variables['system.debug'], 'true')

    # - task: NodeTool@0
    #   displayName: "Use Node $(NodeVersion)"
    #   inputs:
    #       versionSpec: $(NodeVersion)

    # - task: Npm@1
    #   displayName: "Use NPM $(NpmVersion)"
    #   inputs:
    #       command: custom
    #       verbose: true
    #       customCommand: "install -g npm@$(NpmVersion)"

    # - task: Npm@1
    #   displayName: "npm ci"
    #   inputs:
    #       command: custom
    #       verbose: true
    #       customCommand: ci

    - task: DownloadBuildArtifacts@0
      inputs:
          buildType: "current"
          allowPartiallySucceededBuilds: true
          downloadType: "Specific"
          itemPattern: "**/.nyc_output/**"
          downloadPath: "$(Build.SourcesDirectory)"
      displayName: "Restore Coverage Info"
      condition: always()

    - bash: |
        echo "Publish Coverage1"
        echo $SOMETHING
        echo "Publish Coverage2"
        pwd
        echo "Publish Coverage3"
        ls
        echo "List folders"
        ls -dlU .*/ */
      env:
        SOMETHING: "$(Build.SourcesDirectory)"
      workingDirectory: $(Build.SourcesDirectory)
      displayName: "List nyc_output"
      condition: always()

    # - task: CopyFiles@2
    #   inputs:
    #       sourceFolder: "$(Build.SourcesDirectory)/VSIX"
    #       targetFolder: $(Build.SourcesDirectory)
    #   displayName: "Copy VSIX"
    #   condition: succeeded()

    - template: upload_coverage.yml