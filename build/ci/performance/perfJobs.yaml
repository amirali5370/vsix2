jobs:
- job: Testing_Round_1
  timeoutInMinutes: 120
  strategy:
    matrix:
      'Win-Py3.7':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
  pool:
    vmImage: $(VMImageName)
  steps:
    - bash: |
        python -m pip install --upgrade -r build/test-requirements.txt
        python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python --no-cache-dir --implementation py --no-deps --upgrade -r requirements.txt
        python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python/old_ptvsd --no-cache-dir --implementation py --no-deps --upgrade 'ptvsd==4.3.2'
        python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python/new_ptvsd/no_wheels --no-cache-dir --implementation py --no-deps --upgrade --pre ptvsd
        sudo apt-get install libsqlite3-dev
        python -m pip install pysqlite
        python -m pip install numpy
        python -m pip install --upgrade -r ./build/functional-test-requirements.txt
        python -m pip install --upgrade pywin32==224
        npm run test:functional
        node ./build/ci/performance/savePerformanceResults.js

- job: Testing_Round_2
  dependsOn:
  - Testing_Round_1
  timeoutInMinutes: 120
  strategy:
    matrix:
      'Win-Py3.7':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
  pool:
    vmImage: $(VMImageName)
  steps:
    - bash: |
        mocha --require source-map-support/register --opts ./build/.mocha.performance.opts
        node ./build/ci/performance/savePerformanceResults.js

- job: Testing_Round_3
  dependsOn:
  - Testing_Round_2
  timeoutInMinutes: 120
  strategy:
    matrix:
      'Win-Py3.7':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
  pool:
    vmImage: $(VMImageName)
  steps:
    - bash: |
        mocha --require source-map-support/register --opts ./build/.mocha.performance.opts
        node ./build/ci/performance/savePerformanceResults.js

- job: Testing_Round_4
  dependsOn:
  - Testing_Round_3
  timeoutInMinutes: 120
  strategy:
    matrix:
      'Win-Py3.7':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
  pool:
    vmImage: $(VMImageName)
  steps:
    - bash: |
        mocha --require source-map-support/register --opts ./build/.mocha.performance.opts
        node ./build/ci/performance/savePerformanceResults.js

- job: Testing_Round_5
  dependsOn:
  - Testing_Round_4
  timeoutInMinutes: 120
  strategy:
    matrix:
      'Win-Py3.7':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
  pool:
    vmImage: $(VMImageName)
  steps:
    - bash: |
        mocha --require source-map-support/register --opts ./build/.mocha.performance.opts
        node ./build/ci/performance/savePerformanceResults.js
