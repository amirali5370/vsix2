name: '$(Year:yyyy).$(Month).$(BuildID)-pr'
# PR Validation build.
# Notes: Only trigger a PR build for master and release, and skip build/rebuild
#        on changes in the news and .vscode folders.
trigger:
  branches:
    include: ["master", "release"]
  paths:
    exclude: ["/news/1 Enhancements", "/news/2 Fixes", "/news/3 Code Health", "/.vscode"]

# Not the PR build for merges to master and release.
pr:
  autoCancel: true
  branches:
    include: ["master", "release"]
  paths:
    exclude: ["/news/1 Enhancements", "/news/2 Fixes", "/news/3 Code Health", "/.vscode"]

# Variables that are available for the entire pipeline.
variables:
  PythonVersion: '3.7'
  NodeVersion: '8.11.2'
  NpmVersion: 'latest'

jobs:

- job: 'CI'

  timeoutInMinutes: 30
  cancelTimeoutInMinutes: 3

  strategy:
    matrix:
      # Each member of this list must contain these values:
        # VMImageName: '[name]' - the VM image to run the tests on.
        # TestsToRun: 'testA, testB, ..., testN' - the list of tests to execute, see the list above.
      # Each member of this list may contain these values:
        # NeedsPythonTestReqs: [true|false] - install the test-requirements prior to running tests. False if not set.
        # NeedsPythonFunctionalReqs: [true|false] - install the functional-requirements prior to running tests. False if not set.
        # PythonVersion: 'M.m' - the Python version to run. DefaultPythonVersion if not set.
        # NodeVersion: 'x.y.z' - Node version to use. DefaultNodeVersion if not set.
        # SkipXvfb: [true|false] - skip initialization of xvfb prior to running system tests on Linux. False if not set
        # UploadBinary: [true|false] - upload test binaries to Azure if true. False if not set.

      ## Virtual Environment Tests:

      'Win Unit':
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testUnitTests, pythonUnitTests'
        NeedsPythonTestReqs: true
      'Linux Unit':
        PythonVersion: '2.7'
        VMImageName: 'ubuntu-16.04'
        TestsToRun: 'testUnitTests, pythonUnitTests'
        NeedsPythonTestReqs: true
      'Mac Unit':
        PythonVersion: '3.7'
        VMImageName: 'macos-10.13'
        TestsToRun: 'testUnitTests, pythonUnitTests'
        NeedsPythonTestReqs: true

      'Win-Py3.7 Venv':
        VMImageName: 'vs2017-win2016'
        PythonVersion: '3.7'
        TestsToRun: 'venvTests'
        NeedsPythonTestReqs: true
        # This is for the venvTests to use, not needed if you don't run venv tests...
        PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
      'Linux-Py3.7 Venv':
        VMImageName: 'ubuntu-16.04'
        PythonVersion: '3.7'
        TestsToRun: 'venvTests'
        NeedsPythonTestReqs: true
        PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
      'Mac-Py3.7 Venv':
        VMImageName: 'macos-10.13'
        PythonVersion: '3.7'
        TestsToRun: 'venvTests'
        NeedsPythonTestReqs: true
        PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
      'Win-Py3.6 Venv':
        VMImageName: 'vs2017-win2016'
        PythonVersion: '3.7'
        TestsToRun: 'venvTests'
        NeedsPythonTestReqs: true
        PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
      'Linux-Py3.6 Venv':
        VMImageName: 'ubuntu-16.04'
        PythonVersion: '3.7'
        TestsToRun: 'venvTests'
        NeedsPythonTestReqs: true
        PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'
      'Mac-Py3.6 Venv':
        VMImageName: 'macos-10.13'
        PythonVersion: '3.7'
        TestsToRun: 'venvTests'
        NeedsPythonTestReqs: true
        PYTHON_VIRTUAL_ENVS_LOCATION: './src/tmp/envPaths.json'

      # SingleWorkspace Tests
      'Win-Py3.7 Single(1/4)':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '1/4'
      'Win-Py3.7 Single(2/4)':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '2/4'
      'Win-Py3.7 Single(3/4)':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '3/4'
      'Win-Py3.7 Single(4/4)':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '4/4'
      'Linux-Py3.7 Single':
        PythonVersion: '3.7'
        VMImageName: 'ubuntu-16.04'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
      'Mac-Py3.7 Single':
        PythonVersion: '3.7'
        VMImageName: 'macos-10.13'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
      'Win-Py3.6 Single(1/4)':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '1/4'
      'Win-Py3.6 Single(2/4)':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '2/4'
      'Win-Py3.6 Single(3/4)':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '3/4'
      'Win-Py3.6 Single(4/4)':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '4/4'
      'Linux-Py3.6 Single':
        PythonVersion: '3.6'
        VMImageName: 'ubuntu-16.04'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true
      'Mac-Py3.6 Single':
        PythonVersion: '3.6'
        VMImageName: 'macos-10.13'
        TestsToRun: 'testSingleWorkspace'
        NeedsPythonTestReqs: true

      # MultiWorkspace Tests
      'Win-Py3.7 Multi(1/4)':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '1/4'
      'Win-Py3.7 Multi(2/4)':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '2/4'
      'Win-Py3.7 Multi(3/4)':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '3/4'
      'Win-Py3.7 Multi(4/4)':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '4/4'
      'Linux-Py3.7 Multi':
        PythonVersion: '3.7'
        VMImageName: 'ubuntu-16.04'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
      'Mac-Py3.7 Multi':
        PythonVersion: '3.7'
        VMImageName: 'macos-10.13'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
      'Win-Py3.6 Multi(1/4)':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '1/4'
      'Win-Py3.6 Multi(2/4)':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '2/4'
      'Win-Py3.6 Multi(3/4)':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '3/4'
      'Win-Py3.6 Multi(4/4)':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
        CI_SPLIT_TESTS: '4/4'
      'Linux-Py3.6 Multi':
        PythonVersion: '3.6'
        VMImageName: 'ubuntu-16.04'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true
      'Mac-Py3.6 Multi':
        PythonVersion: '3.6'
        VMImageName: 'macos-10.13'
        TestsToRun: 'testMultiWorkspace'
        NeedsPythonTestReqs: true

      # Debugger integration Tests
      'Win-Py3.7 Debugger':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testDebugger'
        NeedsPythonTestReqs: true
      'Linux-Py3.7 Debugger':
        PythonVersion: '3.7'
        VMImageName: 'ubuntu-16.04'
        TestsToRun: 'testDebugger'
        NeedsPythonTestReqs: true
      'Mac-Py3.7 Debugger':
        PythonVersion: '3.7'
        VMImageName: 'macos-10.13'
        TestsToRun: 'testDebugger'
        NeedsPythonTestReqs: true
      'Win-Py3.6 Debugger':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testDebugger'
        NeedsPythonTestReqs: true
      'Linux-Py3.6 Debugger':
        PythonVersion: '3.6'
        VMImageName: 'ubuntu-16.04'
        TestsToRun: 'testDebugger'
        NeedsPythonTestReqs: true
      'Mac-Py3.6 Debugger':
        PythonVersion: '3.6'
        VMImageName: 'macos-10.13'
        TestsToRun: 'testDebugger'
        NeedsPythonTestReqs: true

      # Functional tests (not mocked Jupyter)
      'Windows-Py3.7 Functional':
        PythonVersion: '3.7'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testfunctional'
        NeedsPythonTestReqs: true
        NeedsPythonFunctionalReqs: true
        # This tells the functional tests to not mock out Jupyter...
        VSCODE_PYTHON_ROLLING: true
      'Linux-Py3.7 Functional':
        PythonVersion: '3.7'
        VMImageName: 'ubuntu-16.04'
        TestsToRun: 'testfunctional'
        NeedsPythonTestReqs: true
        NeedsPythonFunctionalReqs: true
        VSCODE_PYTHON_ROLLING: true
      'Mac-Py3.7 Functional':
        PythonVersion: '3.7'
        VMImageName: 'macos-10.13'
        TestsToRun: 'testfunctional'
        NeedsPythonTestReqs: true
        NeedsPythonFunctionalReqs: true
        VSCODE_PYTHON_ROLLING: true
      'Windows-Py3.6 Functional':
        PythonVersion: '3.6'
        VMImageName: 'vs2017-win2016'
        TestsToRun: 'testfunctional'
        NeedsPythonTestReqs: true
        NeedsPythonFunctionalReqs: true
        VSCODE_PYTHON_ROLLING: true
      'Linux-Py3.6 Functional':
        PythonVersion: '3.6'
        VMImageName: 'ubuntu-16.04'
        TestsToRun: 'testfunctional'
        NeedsPythonTestReqs: true
        NeedsPythonFunctionalReqs: true
        VSCODE_PYTHON_ROLLING: true
      'Mac-Py3.6 Functional':
        PythonVersion: '3.6'
        VMImageName: 'macos-10.13'
        TestsToRun: 'testfunctional'
        NeedsPythonTestReqs: true
        NeedsPythonFunctionalReqs: true
        VSCODE_PYTHON_ROLLING: true

  pool:
    vmImage: $(VMImageName)

  steps:
    - template: templates/test_phases.yml

