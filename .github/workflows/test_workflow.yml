name: Test workflow

on:
  push:
    branches:
      # Run the CI workflow only on master for microsoft/vscode-python for now.
      - gh-action-*

env:
  PYTHON_VERSION: 3.8
  CACHE_NPM_DEPS: cache-npm
  CACHE_OUT_DIRECTORY: cache-out-directory
  CACHE_PIP_DEPS: cache-pip
  # Key for the cache created at the end of the the 'Cache ./pythonFiles/lib/python' step.
  CACHE_PYTHONFILES: cache-pvsc-pythonFiles
  ARTIFACT_NAME_VSIX: ms-python-insiders-vsix
  COVERAGE_REPORTS: tests-coverage-reports
  TEST_RESULTS_DIRECTORY: .
  LKG_TAG: ci-lkg

jobs:
  lkg-tag:
    #  LKG = last known good
    name: Tag successful build as LKG
    runs-on: ubuntu-latest
    steps:
      - name: Delete existing tag
        run: |
          curl -s -X DELETE https://api.github.com/repos/kimadeline/vscode-python/git/refs/tags/${{env.LKG_TAG}} \
          -H "Authorization: token ${{secrets.GITHUB_TOKEN}}"

      # We need 2 calls when creating an annotated tag: first create the tag object, then the tag reference.
      # If we only wanted a lightweight tag we would only need to create a tag reference.
      # See https://developer.github.com/v3/git/tags/#create-a-tag-object
      - name: Create a tag object
        # Curl syntax explanation: https://stackoverflow.com/a/36778045
        run: |
          curl -s -X POST "https://api.github.com/repos/kimadeline/vscode-python/git/tags" \
          -H "Authorization: token ${{secrets.GITHUB_TOKEN}}" \
          -d @- << EOF
          {
            "tag": "${{env.LKG_TAG}}",
            "message": "Last known good build of vscode-python via the GitHub Action CI workflow",
            "object": "${{github.sha}}",
            "type": "commit"
          }
          EOF

      - name: Create a tag reference
        run: |
          curl -s -X POST "https://api.github.com/repos/kimadeline/vscode-python/git/refs" \
          -H "Authorization: token ${{secrets.GITHUB_TOKEN}}"  \
          -d @- << EOF
          {
            "ref": "refs/tags/${{env.LKG_TAG}}",
            "sha": "${{github.sha}}"
          }
          EOF
