name: Build

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'release'
      - 'release/*'
      - 'release-*'

env:
  NODE_VERSION: 12.15.0
  # Force a path with spaces and to test extension works in these scenarios
  # Unicode characters are causing 2.7 failures so skip that for now.
  special-working-directory: './path with spaces'
  special-working-directory-relative: 'path with spaces'

jobs:
  setup:
    name: Set up
    if: github.repository == 'microsoft/vscode-python'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: python
    outputs:
      vsix_name: ${{ steps.vsix_names.outputs.vsix_name }}
      vsix_artifact_name: $ {{ steps.vsix_names.outputs.vsix_artifact_name }}
    steps:
      - name: VSIX names
        id: vsix_names
        run: |
          import os
          if os.environ["GITHUB_REF"].endswith("/main"):
            vsix_type = "insiders"
          else:
            vsix_type = "release"
          print(f"::set-output name=vsix_name::ms-python-{vsix_type}.vsix")
          print(f"::set-output name=vsix_artifact_name::ms-python-{vsix_type}-vsix")

  build-vsix:
    name: Build VSIX
    if: github.repository == 'microsoft/vscode-python'
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Use Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Upgrade pip
        run: python -m pip install -U pip

      - name: Build VSIX
        uses: ./.github/actions/build-vsix
        id: build-vsix

      - name: Rename VSIX
        if: steps.build-vsix.outputs.path != needs.setup.outputs.vsix_name
        run: mv ${{ steps.build-vsix.outputs.path }} ${{ needs.setup.outputs.vsix_name }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ needs.setup.outputs.vsix_artifact_name }}
          path: ${{ needs.setup.outputs.vsix_name }}
          if-no-files-found: error
          retention-days: 14

  smoke-tests:
    name: Smoke tests
    if: github.repository == 'microsoft/vscode-python'
    runs-on: ${{ matrix.os }}
    needs: [setup, build-vsix]
    strategy:
      fail-fast: false
      matrix:
        # We're not running CI on macOS for now because it's one less matrix entry to lower the number of runners used,
        # macOS runners are expensive, and we assume that Ubuntu is enough to cover the UNIX case.
        os: [ubuntu-latest, windows-latest]
        python: [3.8]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Use Python ${{matrix.python}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python}}

      - name: Install dependencies (npm ci)
        run: npm ci --prefer-offline

      - name: pip install system test requirements
        run: |
          python -m pip install --upgrade -r build/test-requirements.txt
          python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python --no-cache-dir --implementation py --no-deps --upgrade -r requirements.txt
          python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python --no-cache-dir --implementation py --no-deps --upgrade --pre debugpy
        shell: bash

      - name: pip install smoke test requirements
        run: |
          python -m pip install --upgrade -r build/smoke-test-requirements.txt
        shell: bash

      # Save time by reusing bits from the VSIX.
      - name: Download VSIX
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.setup.outputs.vsix_artifactname }}

      - name: Prepare for smoke tests
        run: npx tsc -p ./
        shell: bash

      - name: Set CI_PYTHON_PATH and CI_DISABLE_AUTO_SELECTION
        run: |
          echo "CI_PYTHON_PATH=python" >> $GITHUB_ENV
          echo "CI_DISABLE_AUTO_SELECTION=1" >> $GITHUB_ENV
        shell: bash

      - name: Run smoke tests
        env:
          DISPLAY: 10
          INSTALL_JUPYTER_EXTENSION: true
        uses: GabrielBB/xvfb-action@v1.5
        with:
          run: node --no-force-async-hooks-checks ./out/test/smokeTest.js
