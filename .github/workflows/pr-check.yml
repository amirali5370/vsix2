name: PR/CI Check

on:
  pull_request:
  push:
    branches-ignore:
      - main
      - release*

env:
  NODE_VERSION: 14.18.2
  PYTHON_VERSION: '3.10' # YML treats 3.10 the number as 3.1, so quotes around 3.10
  MOCHA_REPORTER_JUNIT: true # Use the mocha-multi-reporters and send output to both console (spec) and JUnit (mocha-junit-reporter). Also enables a reporter which exits the process running the tests if it haven't already.
  ARTIFACT_NAME_VSIX: ms-python-insiders-vsix
  VSIX_NAME: ms-python-insiders.vsix
  TEST_RESULTS_DIRECTORY: .
  # Force a path with spaces and to test extension works in these scenarios
  # Unicode characters are causing 2.7 failures so skip that for now.
  special-working-directory: './path with spaces'
  special-working-directory-relative: 'path with spaces'

jobs:
  build-vsix:
    name: Create VSIX
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build VSIX
        uses: ./.github/actions/build-vsix
        with:
          node_version: ${{ env.NODE_VERSION}}
          vsix_name: ${{ env.VSIX_NAME }}
          artifact_name: ${{ env.ARTIFACT_NAME_VSIX }}

  #   insider-tests:
  #     name: Insider tests
  #     # The value of runs-on is the OS of the current job (specified in the strategy matrix below) instead of being hardcoded.
  #     runs-on: ${{ matrix.os }}
  #     strategy:
  #       fail-fast: false
  #       matrix:
  #         # We're not running CI on macOS for now because it's one less matrix entry to lower the number of runners used,
  #         # macOS runners are expensive, and we assume that Ubuntu is enough to cover the UNIX case.
  #         os: [ubuntu-latest]
  #         python: [3.8]
  #     steps:
  #       # Need the source to have the tests available.
  #       - name: Checkout
  #         uses: actions/checkout@v2

  #       - name: Install Node
  #         uses: actions/setup-node@v2
  #         with:
  #           node-version: ${{ env.NODE_VERSION }}
  #           cache: 'npm'

  #       - name: Use Python ${{ matrix.python }}
  #         uses: actions/setup-python@v2
  #         with:
  #           python-version: ${{ matrix.python }}

  #       - name: Install dependencies (npm ci)
  #         run: npm ci --prefer-offline

  #       - name: pip install system test requirements
  #         run: |
  #           python -m pip install --upgrade -r build/test-requirements.txt
  #           python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python --no-cache-dir --implementation py --no-deps --upgrade -r requirements.txt
  #           python -m pip --disable-pip-version-check install -t ./pythonFiles/lib/python --no-cache-dir --implementation py --no-deps --upgrade --pre debugpy
  #         shell: bash

  #       - name: pip install smoke test requirements
  #         run: |
  #           python -m pip install --upgrade -r build/smoke-test-requirements.txt
  #         shell: bash

  #       # Compile the test files.
  #       - name: Prepare for insiders tests
  #         run: npm run prePublish
  #         shell: bash

  #       - name: Set CI_PYTHON_PATH and CI_DISABLE_AUTO_SELECTION
  #         run: |
  #           echo "CI_PYTHON_PATH=python" >> $GITHUB_ENV
  #           echo "CI_DISABLE_AUTO_SELECTION=1" >> $GITHUB_ENV
  #         shell: bash

  #       - name: Run insider tests
  #         env:
  #           DISPLAY: 10
  #           INSTALL_JUPYTER_EXTENSION: true
  #           INSTALL_PYLANCE_EXTENSION: true
  #           VSC_PYTHON_CI_TEST_VSC_CHANNEL: insiders
  #           TEST_FILES_SUFFIX: insiders.test
  #           CODE_TESTS_WORKSPACE: ./src/testMultiRootWkspc/smokeTests
  #         uses: GabrielBB/xvfb-action@v1.6
  #         with:
  #           run: node --no-force-async-hooks-checks ./out/test/standardTest.js
